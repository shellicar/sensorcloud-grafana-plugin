{"version":3,"sources":["../src/dataparse.js"],"names":["DataParser","data","MediaError","Error","console","info","target","_embedded","stream","_links","id","result","addValue","name","time","value","key","val","push","x","coordinates","y","results","forEach","Date","d","t","getTime","v","avg","min","max","med","median","ret","_","map","collection","self","addObject","p","data2","timevalue"],"mappings":"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","file":"dataparse.js","sourcesContent":["\nexport class DataParser {\n    constructor() {\n\n    }\n\n    parseCsvData(data) {\n        if (typeof data != 'string')\n            throw new MediaError('expected string, got ' + typeof data);\n\n        throw new Error('nyi');\n    }\n\n    parseAggData(data) {\n\n        console.info(\"parseAggData\");\n        var target = data._embedded.stream._links.id;\n\n        var result = {};\n\n        var addValue = (name, time, value) => {\n\n            if (value != null) {\n                if (typeof value == \"number\") {\n                    var key = target + \".\" + name;\n                    if (!(key in result))\n                        result[key] = [];\n                    var val = [value, time];\n                    result[key].push(val);\n                }\n                else if ('coordinates' in value) {\n\n                    var x = value.coordinates[0];\n                    var y = value.coordinates[1];\n                    addValue(\"x.\" + name, time, x);\n                    addValue(\"y.\" + name, time, y);\n                }\n            }\n        }\n\n        data.results.forEach(d => {\n            var time = new Date(d.t).getTime();\n            var value = d.v;\n\n            var avg = value.avg;\n            var min = value.min;\n            var max = value.max;\n            var med = value.median;\n\n            if (med != null)\n                addValue(\"median\", time, med);\n            if (avg != null)\n                addValue(\"avg\", time, avg);\n            if (min != null)\n                addValue(\"min\", time, min);\n            if (max != null)\n                addValue(\"max\", time, max);\n\n        })\n\n\n        var ret = _.map(result, (value, key, collection) => {\n            return {\n                \"target\": key,\n                \"datapoints\": value\n            }\n        });\n\n        return ret;\n    }\n\n    parseDataSingle(data) {\n        console.info(\"DataParser.parseDataSingle\");\n\n        var target = data._embedded.stream._links.self.id;\n\n        var result = {};\n\n        var addObject = (key, value, time) => {\n            if (!(key in result))\n                result[key] = [];\n\n            var val = [value, time];\n            result[key].push(val);\n        }\n\n\n        data.results.forEach(d => {\n            var time = new Date(d.t).getTime();\n\n            if ('v' in d) {\n                if ('v' in d.v) {\n                    addObject(target, d.v.v, time);\n                }\n                else if ('p' in d.v) {\n                    addObject(target + \".X\", d.v.p.coordinates[0], time);\n                    addObject(target + \".Y\", d.v.p.coordinates[1], time);\n                    addObject(target + \".Z\", d.v.p.coordinates[2], time);\n                }\n            }\n        });\n\n        var ret = _.map(result, (value, key, collection) => {\n            return {\n                \"target\": key,\n                \"datapoints\": value\n            }\n        });\n\n        return ret;\n    }\n\n    parseData(data) {\n        console.info(\"DataParser.parseData\");\n        var data2 = {};\n\n        var addValue = (name, value, timevalue) => {\n            if (!(name in data2)) {\n                data2[name] = [];\n            }\n            var val = [value, timevalue];\n            data2[name].push(val);\n        }\n\n        data.results.forEach(d => {\n            var time;\n            for (time in d) { break; }\n\n            var timevalue = new Date(time).getTime();\n\n            for (var key in d[time]) {\n\n                if ('v' in d[time][key]) {\n                    addValue(key, d[time][key].v, timevalue);\n                }\n                else if ('p' in d[time][key]) {\n                    addValue(key + \".X\", d[time][key].p.coordinates[0], timevalue);\n                    addValue(key + \".Y\", d[time][key].p.coordinates[1], timevalue);\n                    addValue(key + \".Z\", d[time][key].p.coordinates[2], timevalue);\n                }\n\n            }\n        });\n\n        return _.map(data2, (value, key, collection) => {\n            return { \"target\": key, \"datapoints\": value }\n        });\n    }\n\n}\n"]}