{"version":3,"sources":["../src/requestcache.js"],"names":["_","RequestCache","backend","credentials","headers","backendSrv","withCredentials","cache","url","options","method","datasourceRequest","cachekey","func","CacheAge","length","Date","now","time","console","info","shift","i","isEqual","key","promise","buildRequest","then","cacheItem","push"],"mappings":";;;;;;;;;;;;;;;AAAOA,a;;;;;;;;;;;;;;;;;;;;;oCAEMC,Y;AACT,sCAAYC,OAAZ,EAAqBC,WAArB,EAAkCC,OAAlC,EAA2C;AAAA;;AACvC,yBAAKC,UAAL,GAAkBH,OAAlB;AACA,yBAAKI,eAAL,GAAuBH,WAAvB;AACA,yBAAKC,OAAL,GAAeA,OAAf;AACA,yBAAKG,KAAL,GAAa,EAAb;AACH;;;;iDAEYC,G,EAAK;AACd,4BAAIC,UAAU;AACVD,iCAAKA,GADK;AAEVE,oCAAQ;AAFE,yBAAd;;AAKAD,gCAAQH,eAAR,GAA0B,KAAKA,eAA/B;AACAG,gCAAQL,OAAR,GAAkB,KAAKA,OAAvB;;AAEA,+BAAO,KAAKC,UAAL,CAAgBM,iBAAhB,CAAkCF,OAAlC,CAAP;AACH;;;8CAESD,G,EAAKI,Q,EAAUC,I,EAAM;;AAE3B,4BAAMC,WAAW,KAAjB;;AAEA,+BAAO,KAAKP,KAAL,CAAWQ,MAAX,GAAoB,CAApB,IAAyBC,KAAKC,GAAL,KAAa,KAAKV,KAAL,CAAW,CAAX,EAAcW,IAA3B,GAAkCJ,QAAlE,EAA4E;AACxEK,oCAAQC,IAAR,CAAa,sBAAb;AACA,iCAAKb,KAAL,CAAWc,KAAX;AACH;;AAGD,6BAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,KAAKf,KAAL,CAAWQ,MAA/B,EAAuC,EAAEO,CAAzC,EAA4C;AACxC,gCAAItB,EAAEuB,OAAF,CAAU,KAAKhB,KAAL,CAAWe,CAAX,EAAcE,GAAxB,EAA6BZ,QAA7B,CAAJ,EAA4C;AACxC,uCAAO,KAAKL,KAAL,CAAWe,CAAX,EAAcG,OAArB;AACH;AACJ;;AAED,4BAAIA,UAAU,KAAKC,YAAL,CAAkBlB,GAAlB,CAAd;AACAiB,kCAAUA,QAAQE,IAAR,CAAad,IAAb,CAAV;;AAEA,4BAAIe,YAAY;AACZJ,iCAAKZ,QADO;AAEZa,qCAASA,OAFG;AAGZP,kCAAMF,KAAKC,GAAL;AAHM,yBAAhB;AAKA,6BAAKV,KAAL,CAAWsB,IAAX,CAAgBD,SAAhB;;AAEA,+BAAOH,OAAP;AACH","file":"requestcache.js","sourcesContent":["import _ from \"lodash\";\n\nexport class RequestCache {\n    constructor(backend, credentials, headers) {\n        this.backendSrv = backend;\n        this.withCredentials = credentials;\n        this.headers = headers;\n        this.cache = [];\n    }\n\n    buildRequest(url) {\n        var options = {\n            url: url,\n            method: 'GET'\n        };\n\n        options.withCredentials = this.withCredentials;\n        options.headers = this.headers;\n\n        return this.backendSrv.datasourceRequest(options);\n    }\n\n    doRequest(url, cachekey, func) {\n\n        const CacheAge = 30000;\n\n        while (this.cache.length > 0 && Date.now() - this.cache[0].time > CacheAge) {\n            console.info(\"expiring cached item\");\n            this.cache.shift();\n        }\n\n\n        for (var i = 0; i < this.cache.length; ++i) {\n            if (_.isEqual(this.cache[i].key, cachekey)) {\n                return this.cache[i].promise;\n            }\n        }\n\n        var promise = this.buildRequest(url);\n        promise = promise.then(func);\n\n        var cacheItem = {\n            key: cachekey,\n            promise: promise,\n            time: Date.now()\n        };\n        this.cache.push(cacheItem);\n\n        return promise;\n    }\n}\n"]}