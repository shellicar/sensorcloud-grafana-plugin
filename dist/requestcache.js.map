{"version":3,"sources":["../src/requestcache.js"],"names":["_","RequestCache","backend","credentials","headers","backendSrv","withCredentials","cache","url","options","method","promise","datasourceRequest","then","console","info","x","status","cachekey","func","CacheAge","length","Date","now","time","debug","shift","i","isEqual","key","buildRequest","cacheItem","push"],"mappings":";;;;;;;;;;;;;;;AAAOA,a;;;;;;;;;;;;;;;;;;;;;oCAEMC,Y;AACT,sCAAYC,OAAZ,EAAqBC,WAArB,EAAkCC,OAAlC,EAA2C;AAAA;;AACvC,yBAAKC,UAAL,GAAkBH,OAAlB;AACA,yBAAKI,eAAL,GAAuBH,WAAvB;AACA,yBAAKC,OAAL,GAAeA,OAAf;AACA,yBAAKG,KAAL,GAAa,EAAb;AACH;;;;iDAEYC,G,EAAK;AACd,4BAAIC,UAAU;AACVD,iCAAKA,GADK;AAEVE,oCAAQ;AAFE,yBAAd;;AAKAD,gCAAQH,eAAR,GAA0B,KAAKA,eAA/B;AACAG,gCAAQL,OAAR,GAAkB,KAAKA,OAAvB;;AAEA,4BAAIO,UAAU,KAAKN,UAAL,CAAgBO,iBAAhB,CAAkCH,OAAlC,CAAd;AACAE,gCAAQE,IAAR,CAAa,aAAK;AACdC,oCAAQC,IAAR,CAAa,uBAAuBC,EAAEC,MAAtC;AACA,mCAAOD,CAAP;AACH,yBAHD;AAIA,+BAAOL,OAAP;AACH;;;8CAESH,G,EAAKU,Q,EAAUC,I,EAAM;;AAE3B,4BAAMC,WAAW,KAAjB;;AAEA,+BAAO,KAAKb,KAAL,CAAWc,MAAX,GAAoB,CAApB,IAAyBC,KAAKC,GAAL,KAAa,KAAKhB,KAAL,CAAW,CAAX,EAAciB,IAA3B,GAAkCJ,QAAlE,EAA4E;AACxEN,oCAAQW,KAAR,CAAc,sBAAd;AACA;AACA,iCAAKlB,KAAL,CAAWmB,KAAX;AACH;;AAED,6BAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,KAAKpB,KAAL,CAAWc,MAA/B,EAAuC,EAAEM,CAAzC,EAA4C;AACxC,gCAAI3B,EAAE4B,OAAF,CAAU,KAAKrB,KAAL,CAAWoB,CAAX,EAAcE,GAAxB,EAA6BX,QAA7B,CAAJ,EAA4C;AACxCJ,wCAAQC,IAAR,CAAa,uBAAb;AACA,uCAAO,KAAKR,KAAL,CAAWoB,CAAX,EAAchB,OAArB;AACH;AACJ;;AAED,4BAAIA,UAAU,KAAKmB,YAAL,CAAkBtB,GAAlB,CAAd;AACAG,kCAAUA,QAAQE,IAAR,CAAaM,IAAb,CAAV;;AAEA,4BAAIY,YAAY;AACZF,iCAAKX,QADO;AAEZP,qCAASA,OAFG;AAGZa,kCAAMF,KAAKC,GAAL;AAHM,yBAAhB;AAKA,6BAAKhB,KAAL,CAAWyB,IAAX,CAAgBD,SAAhB;;AAEA,+BAAOpB,OAAP;AACH","file":"requestcache.js","sourcesContent":["import _ from \"lodash\";\n\nexport class RequestCache {\n    constructor(backend, credentials, headers) {\n        this.backendSrv = backend;\n        this.withCredentials = credentials;\n        this.headers = headers;\n        this.cache = [];\n    }\n\n    buildRequest(url) {\n        var options = {\n            url: url,\n            method: 'GET'\n        };\n\n        options.withCredentials = this.withCredentials;\n        options.headers = this.headers;\n\n        var promise = this.backendSrv.datasourceRequest(options);\n        promise.then(x => {\n            console.info(\"Request complete: \" + x.status);\n            return x;\n        });\n        return promise;\n    }\n\n    doRequest(url, cachekey, func) {\n\n        const CacheAge = 30000;\n\n        while (this.cache.length > 0 && Date.now() - this.cache[0].time > CacheAge) {\n            console.debug(\"expiring cached item\");\n            // remove first item\n            this.cache.shift();\n        }\n\n        for (var i = 0; i < this.cache.length; ++i) {\n            if (_.isEqual(this.cache[i].key, cachekey)) {\n                console.info(\"returning cached item\");\n                return this.cache[i].promise;\n            }\n        }\n\n        var promise = this.buildRequest(url);\n        promise = promise.then(func);\n\n        var cacheItem = {\n            key: cachekey,\n            promise: promise,\n            time: Date.now()\n        };\n        this.cache.push(cacheItem);\n\n        return promise;\n    }\n}\n"]}