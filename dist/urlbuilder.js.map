{"version":3,"sources":["../src/urlbuilder.js"],"names":["UrlBuilder","baseUrl","apikey","sensorid","targets","arr","streamid","map","x","target","join","console","info","push","url","buildUrl","str","opt","i","length","query"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAEaA,U;AAET,oCAAYC,OAAZ,EAAqBC,MAArB,EAA6BC,QAA7B,EAAuC;AAAA;;AACnC,yBAAKF,OAAL,GAAeA,OAAf;AACA,yBAAKC,MAAL,GAAcA,MAAd;AACA,yBAAKC,QAAL,GAAgBA,QAAhB;AACH;;;;kDAEaC,O,EAAS;AACnB,4BAAIC,MAAM,EAAV;;AAEA,4BAAIC,WAAW,IAAf;AACA,4BAAIF,OAAJ,EAAa;AACTE,uCAAWF,QAAQG,GAAR,CAAY;AAAA,uCAAKC,EAAEC,MAAP;AAAA,6BAAZ,EAA2BC,IAA3B,CAAgC,GAAhC,CAAX;AACH;;AAEDC,gCAAQC,IAAR,CAAa,UAAb;AACAD,gCAAQC,IAAR,CAAaN,QAAb;;AAEA,4BAAI,CAACA,QAAL,EACIA,WAAW,KAAKH,QAAhB;;AAEJ,4BAAIG,QAAJ,EAAc;AACVK,oCAAQC,IAAR,CAAa,cAAcN,QAA3B;AACAD,gCAAIQ,IAAJ,CAAS,QAAQP,QAAjB;AACH;;AAEDD,4BAAIQ,IAAJ,CAAS,aAAT;AACAR,4BAAIQ,IAAJ,CAAS,uBAAT;;AAEA;AACA;;AAEA;AACA,4BAAIC,MAAM,KAAKC,QAAL,CAAc,UAAd,EAA0BV,GAA1B,CAAV;;AAEAM,gCAAQC,IAAR,CAAa,SAASE,GAAtB;AACA,+BAAOA,GAAP;AACH;;;6CAEQE,G,EAAKX,G,EAAK;AACf,4BAAIJ,UAAU,KAAKA,OAAnB;AACA,4BAAIa,MAAMb,UAAUe,GAApB;;AAEA,4BAAIC,MAAM,EAAV;;AAEA,4BAAI,KAAKf,MAAL,IAAe,EAAnB,EACIe,IAAIJ,IAAJ,CAAS,YAAY,KAAKX,MAA1B;;AAEJ,4BAAIG,GAAJ,EAAS;AACL,iCAAK,IAAIa,IAAI,CAAb,EAAgBA,IAAIb,IAAIc,MAAxB,EAAgC,EAAED,CAAlC;AACID,oCAAIJ,IAAJ,CAASR,IAAIa,CAAJ,CAAT;AADJ;AAEH;;AAED,4BAAID,IAAIE,MAAJ,GAAa,CAAjB,EAAoB;AAChB,gCAAIC,QAAQH,IAAIP,IAAJ,CAAS,GAAT,CAAZ;AACAI,mCAAO,MAAMM,KAAb;AACH;;AAEDT,gCAAQC,IAAR,CAAa,UAAUE,GAAvB;AACA,+BAAOA,GAAP;AACH","file":"urlbuilder.js","sourcesContent":["\n\nexport class UrlBuilder {\n\n    constructor(baseUrl, apikey, sensorid) {\n        this.baseUrl = baseUrl;\n        this.apikey = apikey;\n        this.sensorid = sensorid;\n    }\n\n    buildQueryUrl(targets) {\n        var arr = [];\n\n        var streamid = null;\n        if (targets) {\n            streamid = targets.map(x => x.target).join(\",\");\n        }\n\n        console.info('streamid');\n        console.info(streamid);\n\n        if (!streamid)\n            streamid = this.sensorid;\n\n        if (streamid) {\n            console.info('streamid=' + streamid);\n            arr.push('id=' + streamid);\n        }\n\n        arr.push('limit=10000');\n        arr.push('properties=resulttype');\n\n        // only request scalars\n        //arr.push('resulttype=scalarvalue');\n\n        // api url\n        var url = this.buildUrl(\"/streams\", arr);\n\n        console.info(\"URL=\" + url);\n        return url;\n    }\n\n    buildUrl(str, arr) {\n        var baseUrl = this.baseUrl;\n        var url = baseUrl + str;\n\n        var opt = [];\n\n        if (this.apikey != \"\")\n            opt.push('apikey=' + this.apikey);\n\n        if (arr) {\n            for (var i = 0; i < arr.length; ++i)\n                opt.push(arr[i]);\n        }\n\n        if (opt.length > 0) {\n            var query = opt.join('&');\n            url += '?' + query\n        }\n\n        console.info('url: ' + url);\n        return url;\n    }\n}\n"]}