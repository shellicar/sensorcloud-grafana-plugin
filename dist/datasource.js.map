{"version":3,"sources":["../src/datasource.js"],"names":["_","DataParser","UrlBuilder","RequestCache","GenericDatasource","instanceSettings","$q","backendSrv","templateSrv","jsonData","sensorid","apikey","console","info","baseUrl","getBaseUrl","source","url","builder","type","name","q","withCredentials","debug","basicAuth","headers","length","requester","customUrl","str","arr","buildUrl","targets","buildQueryUrl","options","query","buildQueryParameters","filter","t","hide","when","data","cacheKey","makeISOString","range","from","to","maxDataPoints","promise","doRequest","pq","parseQueryAgg","x","interpolated","target","replace","myHandler","obj","_embedded","streams","arr_reply","key","id","resulttype","push","mapToTextValue","myPromise","Promise","resolve","reject","then","parser","parseAggData","multiple","parseData","parseDataSingle","api_call","parse_func","extra_arr","streamid","join","promises","i","result","j","map","intervalMs","parseQueryExt","newData","doAllPromises","thePromise","status","ret","v","toISOString","count","Error","message","title","err","method","response","parseTestResult","annotation","annotationQuery","datasource","enable","iconColor","rangeRaw","d","text","value","isObject","datasourceRequest","scopedVars","refId"],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from \"lodash\";\nimport { DataParser } from \"./dataparse.js\";\nimport { UrlBuilder } from \"./urlbuilder.js\";\nimport { RequestCache } from \"./requestcache.js\";\n\nexport class GenericDatasource {\n\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\n\n    if (instanceSettings.jsonData != null) {\n      this.sensorid = instanceSettings.jsonData['sensorid'] || \"\";\n      this.apikey = instanceSettings.jsonData['apikey'] || \"\";\n    }\n    else {\n      this.sensorid = \"\";\n      this.apikey = \"\";\n    }\n    console.info(\"sensorid: \" + this.sensorid);\n    console.info(instanceSettings);\n\n    var baseUrl = this.getBaseUrl(instanceSettings.jsonData.source, instanceSettings.url);\n    console.info(\"url: \" + baseUrl);\n\n    this.builder = new UrlBuilder(baseUrl, this.apikey, this.sensorid);\n\n    this.type = instanceSettings.type;\n    this.name = instanceSettings.name;\n    this.q = $q;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n    this.withCredentials = instanceSettings.withCredentials;\n\n    console.debug('basic auth');\n    console.debug(instanceSettings.basicAuth);\n\n    this.headers = { 'Content-Type': 'application/json' };\n    if (typeof instanceSettings.basicAuth === 'string' && instanceSettings.basicAuth.length > 0) {\n      this.headers['Authorization'] = instanceSettings.basicAuth;\n    }\n\n    this.requester = new RequestCache(this.backendSrv, this.withCredentials, this.headers);\n\n  }\n\n  getBaseUrl(source, customUrl) {\n    console.info(\"getBaseUrl: \" + source);\n    switch (source) {\n      case \"production\":\n        return \"https://sensor-cloud.io/api/sensor/v2\";\n      case \"development\":\n        return \"https://52.64.57.4/api/sensor/v2\";\n        case \"custom\":\n        return customUrl;\n    }\n    return null;\n  }\n\n  buildUrl(str, arr) {\n    return this.builder.buildUrl(str, arr);\n  }\n\n  buildQueryUrl(targets) {\n    return this.builder.buildQueryUrl(targets);\n  }\n\n  query(options) {\n    var query = this.buildQueryParameters(options);\n\n    query.targets = query.targets.filter(t => !t.hide);\n\n    if (query.targets.length <= 0) {\n      return this.q.when({ data: [] });\n    }\n\n    // build URL\n    var arr = [];\n    var url = this.buildQueryUrl(query.targets);\n\n    // request key to differentiate requests with different returning data but with same URL\n    var cacheKey = {\n      url: url,\n      query:\n      [\n        this.makeISOString(query.range.from),\n        this.makeISOString(query.range.to),\n        query.maxDataPoints,\n        query.targets\n      ]\n    };\n    console.info(\"cacheKey: \");\n    console.info(cacheKey);\n\n    var promise = this.requester.doRequest(url, cacheKey, x => {\n      console.info(\"parsing request\");\n      //var pq = this.parseQuery(x, query);\n      var pq = this.parseQueryAgg(x, query);\n      return pq;\n    });\n\n    return promise;\n  }\n\n\n  metricFindQuery(query) {\n    console.info('metricFindQuery');\n\n    var interpolated = {\n      target: this.templateSrv.replace(query, null, 'regex')\n    };\n\n    var url = this.buildQueryUrl();\n\n    var cacheKey = {\n      url: url,\n      query: \"findMetrics\"\n    };\n\n\n    var myHandler = x => {\n      var obj = x.data._embedded.streams;\n\n      var arr_reply = [];\n\n      for (var key in obj) {\n        var id = obj[key].id;\n        var type = obj[key].resulttype;\n\n        arr_reply.push(id);\n      }\n\n      return this.mapToTextValue({ data: arr_reply });\n    };\n\n    // get the promise\n    var promise = this.requester.doRequest(url, cacheKey);\n\n    // wrap around another promise\n    var myPromise = new Promise((resolve, reject) => {\n      resolve(promise);\n    });\n\n    return myPromise.then(myHandler);\n\n  }\n\n\n  parseAggData(data) {\n    console.info(\"parseAggData\");\n    console.info(data);\n\n    var parser = new DataParser();\n    return parser.parseAggData(data);\n  }\n\n  parseData(data, multiple) {\n    console.info(\"parseData\");\n    var parser = new DataParser();\n\n    if (multiple)\n      return parser.parseData(data);\n    return parser.parseDataSingle(data);\n  }\n\n  parseQueryExt(streams, query, api_call, parse_func, extra_arr) {\n    //var streams = str.data._embedded.streams;\n\n    var streamid = streams.join(\",\");\n\n    var arr = [];\n    arr.push('streamid=' + streamid);\n    arr.push('start=' + this.makeISOString(query.range.from));\n    arr.push('end=' + this.makeISOString(query.range.to));\n    arr.push('limit=' + query.maxDataPoints);\n    arr.push('sort=descending');\n    arr.push('media=json');\n\n    if (extra_arr != null)\n      arr.push(extra_arr);\n\n    var url = this.buildUrl(api_call, arr);\n\n    var cacheKey = { url: url, query: \"extended\" };\n\n    var multiple = streams.length > 1;\n\n    var promise = this.requester.doRequest(url, cacheKey, parse_func);/*x => {\n      x.data = this.parseData(x.data, multiple);\n      return x;\n    });*/\n\n    return promise;\n  }\n\n\n  async doAllPromises(promises) {\n\n    console.info(\"doAllPromises: \" + promises.length);\n    var data = [];\n\n    for (var i = 0; i < promises.length; ++i) {\n      var promise = promises[i];\n      console.info(\"awaiting - \" + i);\n      var result = await promise;\n      console.info(\"awaited\")\n\n\n      for (var j = 0; j < result.data.length; ++j) {\n        data.push(result.data[j]);\n      }\n    }\n\n    console.info(\"data=\");\n    console.info(data);\n\n    return { data: data };\n  }\n\n\n  parseQueryAgg(str, query) {\n    var streams = str.data._embedded.streams;\n    streams = streams.map(x => x.id)\n    console.info(\"parseQueryAgg\");\n    console.info(streams);\n\n    var promises = [];\n\n    for (var i = 0; i < streams.length; ++i) {\n      var str = streams[i];\n      var multiple = streams.length > 1;\n\n      var arr = [\"aggperiod=\" + query.intervalMs];\n      var promise = this.parseQueryExt([str], query, '/aggregation', x => {\n        var newData = this.parseAggData(x.data);\n        x.data = newData;\n        return x;\n      }, arr);\n      promises.push(promise);\n    }\n\n\n    return this.doAllPromises(promises);\n\n\n    var thePromise = new Promise((resolve, reject) => {\n      resolve(promises);\n    });\n\n    thePromise.then(x => {\n\n\n\n\n\n      var result = [];\n      for (var i = 0; i < x.length; ++i) {\n        if (x[i].status != 200)\n          throw 'error';\n\n        for (var j = 0; j < x[i].data.length; ++j)\n          result.push(x[i].data[j]);\n      }\n      console.info(\"final promise\");\n      console.info(result);\n\n      var ret = { data: result };\n      console.info(\"FINAL: \");\n      console.info(ret);\n      return ret;\n    });\n    return thePromise;\n  }\n\n  parseQuery(str, query) {\n    var streams = str.data._embedded.streams;\n    streams = streams.map(x => x.id);\n\n    var multiple = streams.length > 1;\n    return this.parseQueryExt(streams, query, '/observations', x => {\n      x.data = this.parseData(x.data, multiple);\n      return x;\n    });\n  }\n\n  makeISOString(v) {\n    if (v == null) { return null; }\n\n    var str = v.toISOString();\n    return str;\n  }\n\n  parseTestResult(data) {\n    console.info('parseTestResult');\n    try {\n      var count = data.count;\n      console.info(\"count=\" + count);\n      if (count > 1000)\n        throw Error('too many streams (' + count + '), plugin only supports up to 1000');\n      return { status: \"success\", message: \"Data source is working, \" + count + \" streams found\", title: \"Success\" };\n    }\n    catch (err) {\n      return { status: \"error\", message: err.message, title: \"Error\" };\n    }\n\n\n  }\n\n  testDatasource() {\n    var url = this.buildQueryUrl();\n\n    return this.doRequest({\n      url: url,\n      method: 'GET',\n    }).then(response => {\n      console.info(\"response=\" + response.status);\n      if (response.status === 200) {\n        console.info(\"Response = 200\");\n\n\n        return this.parseTestResult(response.data);\n      }\n    });\n  }\n\n  annotationQuery(options) {\n    var query = this.templateSrv.replace(options.annotation.query, {}, 'glob');\n    var annotationQuery = {\n      range: options.range,\n      annotation: {\n        name: options.annotation.name,\n        datasource: options.annotation.datasource,\n        enable: options.annotation.enable,\n        iconColor: options.annotation.iconColor,\n        query: query\n      },\n      rangeRaw: options.rangeRaw\n    };\n\n    return this.doRequest({\n      url: this.buildUrl('/annotations_not_implemented'),\n      method: 'POST',\n      data: annotationQuery\n    }).then(result => {\n      return result.data;\n    });\n  }\n\n\n\n  mapToTextValue(result) {\n    return _.map(result.data, (d, i) => {\n      if (d && d.text && d.value) {\n        return { text: d.text, value: d.value };\n      } else if (_.isObject(d)) {\n        return { text: d, value: i };\n      }\n      return { text: d, value: d };\n    });\n  }\n\n  doRequest(options) {\n    options.withCredentials = this.withCredentials;\n    options.headers = this.headers;\n\n    var promise = this.backendSrv.datasourceRequest(options);\n    promise.then(x => {\n      console.info(\"performing HTTP request\");\n      return x;\n    })\n    return promise;\n  }\n\n  buildQueryParameters(options) {\n    //remove placeholder targets\n    options.targets = _.filter(options.targets, target => {\n      return target.target !== 'select metric';\n    });\n\n    var targets = _.map(options.targets, target => {\n      return {\n        target: this.templateSrv.replace(target.target, options.scopedVars, 'regex'),\n        refId: target.refId,\n        hide: target.hide,\n        type: target.type || 'timeserie'\n      };\n    });\n\n    options.targets = targets;\n\n    return options;\n  }\n}\n"]}