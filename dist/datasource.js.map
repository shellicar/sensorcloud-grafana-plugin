{"version":3,"sources":["../src/datasource.js"],"names":["_","DataParser","UrlBuilder","RequestCache","GenericDatasource","instanceSettings","$q","backendSrv","templateSrv","jsonData","sensorid","apikey","builder","type","name","q","withCredentials","console","info","basicAuth","headers","length","requester","str","arr","buildUrl","buildQueryUrl","options","query","buildQueryParameters","targets","filter","t","hide","when","data","url","key","promise","doRequest","pq","parseQuery","x","parser","parseData","streams","_embedded","strnames","i","push","id","streamid","reverse","join","makeISOString","range","from","to","maxDataPoints","v","toISOString","count","Error","err","status","message","title","method","then","response","parseTestResult","replace","annotation","annotationQuery","datasource","enable","iconColor","rangeRaw","result","interpolated","target","mapToTextValue","map","d","text","value","isObject","datasourceRequest","scopedVars","refId"],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from \"lodash\";\nimport { DataParser } from \"./dataparse.js\";\nimport { UrlBuilder } from \"./urlbuilder.js\";\nimport { RequestCache } from \"./requestcache.js\";\n\nexport class GenericDatasource {\n\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\n\n    if (instanceSettings.jsonData != null) {\n      this.sensorid = instanceSettings.jsonData['sensorid'];\n      this.apikey = instanceSettings.jsonData['apikey'];\n    }\n    else {\n      this.sensorid = \"\";\n      this.apikey = \"\";\n    }\n    this.builder = new UrlBuilder(this.apikey, this.sensorid);\n\n    this.type = instanceSettings.type;\n    this.name = instanceSettings.name;\n    this.q = $q;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n    this.withCredentials = instanceSettings.withCredentials;\n\n    console.info('basic auth');\n    console.info(instanceSettings.basicAuth);\n\n    this.headers = { 'Content-Type': 'application/json' };\n    if (typeof instanceSettings.basicAuth === 'string' && instanceSettings.basicAuth.length > 0) {\n      this.headers['Authorization'] = instanceSettings.basicAuth;\n    }\n\n    this.requester = new RequestCache(this.backendSrv, this.withCredentials, this.headers);\n\n  }\n\n  buildUrl(str, arr) {\n    return this.builder.buildUrl(str, arr);\n  }\n\n  buildQueryUrl() {\n    return this.builder.buildQueryUrl();\n  }\n\n  query(options) {\n    var query = this.buildQueryParameters(options);\n\n    query.targets = query.targets.filter(t => !t.hide);\n\n    if (query.targets.length <= 0) {\n      return this.q.when({ data: [] });\n    }\n\n    // build URL\n    var arr = [];\n    var url = this.buildQueryUrl();\n\n\n    var key = { url: url, query: query };\n\n    var promise = this.requester.doRequest(url, key, x => {\n      var pq = this.parseQuery(x, query);\n      return pq;\n    });\n\n    return promise;\n  }\n\n  parseData(data) {\n    console.info(\"parseData\");\n    var parser = new DataParser();\n    return parser.parseData(data);\n  }\n\n  parseQuery(str, query) {\n\n    console.info(\"parseQuery\");\n\n    var streams = str.data._embedded.streams;\n\n    var strnames = [];\n    for (var i = 0; i < streams.length; ++i) {\n      strnames.push(streams[i].id);\n    }\n    var streamid = strnames.reverse().join(\",\");\n\n    var arr = [];\n    arr.push('streamid=' + streamid);\n    arr.push('start=' + this.makeISOString(query.range.from));\n    arr.push('end=' + this.makeISOString(query.range.to));\n    arr.push('limit=' + query.maxDataPoints);\n    arr.push('sort=descending');\n\n    var url = this.buildUrl('/observations', arr);\n\n    var key = { url: url, query: \"extended\" };\n\n    var promise = this.requester.doRequest(url, key, x => {\n      x.data = this.parseData(x.data);\n      return x;\n    });\n\n    return promise;\n  }\n\n  makeISOString(v) {\n    if (v == null) { return null; }\n\n    var str = v.toISOString();\n    return str;\n  }\n\n  parseTestResult(data) {\n    try {\n      var count = data.count;\n      if (count > 100)\n        throw Error('too many streams, plugin only supports up to 100');\n    }\n    catch (err) {\n      return { status: \"error\", message: err.message, title: \"Error\" };\n    }\n\n    return { status: \"success\", message: \"Data source is working\", title: \"Success\" };\n  }\n\n  testDatasource() {\n    var url = this.buildQueryUrl();\n\n    return this.doRequest({\n      url: url,\n      method: 'GET',\n    }).then(response => {\n      if (response.status === 200) {\n        console.info(\"Response = 200\");\n\n        return this.parseTestResult(response.data);\n      }\n    });\n  }\n\n  annotationQuery(options) {\n    var query = this.templateSrv.replace(options.annotation.query, {}, 'glob');\n    var annotationQuery = {\n      range: options.range,\n      annotation: {\n        name: options.annotation.name,\n        datasource: options.annotation.datasource,\n        enable: options.annotation.enable,\n        iconColor: options.annotation.iconColor,\n        query: query\n      },\n      rangeRaw: options.rangeRaw\n    };\n\n    return this.doRequest({\n      url: this.buildUrl('/annotations_not_implemented'),\n      method: 'POST',\n      data: annotationQuery\n    }).then(result => {\n      return result.data;\n    });\n  }\n\n  metricFindQuery(query) {\n    var interpolated = {\n      target: this.templateSrv.replace(query, null, 'regex')\n    };\n\n    console.info('metricFind');\n    console.info(interpolated);\n\n    return this.doRequest({\n      url: this.buildUrl('/search_not_implemented_yet'),\n      method: 'GET',\n    }).then(this.mapToTextValue);\n  }\n\n  mapToTextValue(result) {\n    return _.map(result.data, (d, i) => {\n      if (d && d.text && d.value) {\n        return { text: d.text, value: d.value };\n      } else if (_.isObject(d)) {\n        return { text: d, value: i };\n      }\n      return { text: d, value: d };\n    });\n  }\n\n  doRequest(options) {\n    options.withCredentials = this.withCredentials;\n    options.headers = this.headers;\n\n    return this.backendSrv.datasourceRequest(options);\n  }\n\n  buildQueryParameters(options) {\n    //remove placeholder targets\n    options.targets = _.filter(options.targets, target => {\n      return target.target !== 'select metric';\n    });\n\n    var targets = _.map(options.targets, target => {\n      return {\n        target: this.templateSrv.replace(target.target, options.scopedVars, 'regex'),\n        refId: target.refId,\n        hide: target.hide,\n        type: target.type || 'timeserie'\n      };\n    });\n\n    options.targets = targets;\n\n    return options;\n  }\n}\n"]}